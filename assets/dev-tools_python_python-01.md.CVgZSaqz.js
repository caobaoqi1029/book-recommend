import{_ as t,c as a,o as l,a6 as i}from"./chunks/framework.B6yjUw6z.js";const m=JSON.parse('{"title":"推荐系统概述","description":"","frontmatter":{},"headers":[],"relativePath":"dev-tools/python/python-01.md","filePath":"dev-tools/python/python-01.md","lastUpdated":1716110663000}'),o={name:"dev-tools/python/python-01.md"},e=i('<h1 id="推荐系统概述" tabindex="-1">推荐系统概述 <a class="header-anchor" href="#推荐系统概述" aria-label="Permalink to &quot;推荐系统概述&quot;">​</a></h1><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p></p><p>个性化推荐 （推荐系统）经历了多年的发展，已经成为互联网产品的标配，也是 AI 成功落地的分支之一，在电商 （淘宝、京东），咨询 （今日头条、微博）、音乐（网易云音乐、QQ 音乐）、短视频（抖音、快手）等热门应用中，推荐系统都是核心组件之一，推荐系统产生的背景主要有以下几点：</p><ul><li>信息过载 | 用户需求不明确 <ul><li>分类目录 （1990 年左右）：覆盖少量热门网站 如 Hao 123 、Yahoo</li><li>搜索殷勤 （2000 年左右）：透过搜索词明确需求 如 Google、Baidu</li><li>推荐系统 （2010 年左右）：不需要用户提供明确的需求，通过分析用户的历史行为给用户的兴趣进行建模，从而主动给用户推荐能够满足他们兴趣和需求的信息</li></ul></li></ul></div><h2 id="一、推荐系统概念" tabindex="-1">一、推荐系统概念 <a class="header-anchor" href="#一、推荐系统概念" aria-label="Permalink to &quot;一、推荐系统概念&quot;">​</a></h2><h3 id="_1-2-什么是推荐系统" tabindex="-1">1.2 什么是推荐系统 <a class="header-anchor" href="#_1-2-什么是推荐系统" aria-label="Permalink to &quot;1.2 什么是推荐系统&quot;">​</a></h3><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p></p><p><strong>没有明确需求</strong> 的用户访问我们的服务，且服务的物品对用户构成了 <strong>信息过载</strong>，系统通过 <strong>一定的规则对物品进行排序</strong>，并将排在前面的物品展示给用户 （Top N），这样的系统就是推荐系统</p></div><h3 id="_1-3-推荐系统与搜索引擎的区别" tabindex="-1">1.3 推荐系统与搜索引擎的区别 <a class="header-anchor" href="#_1-3-推荐系统与搜索引擎的区别" aria-label="Permalink to &quot;1.3 推荐系统与搜索引擎的区别&quot;">​</a></h3><table><thead><tr><th></th><th>搜索</th><th>推荐</th></tr></thead><tbody><tr><td>行为方式</td><td>主动</td><td>被动</td></tr><tr><td>意图</td><td>明确</td><td>模糊</td></tr><tr><td>个性化</td><td>弱</td><td>强</td></tr><tr><td>流量分布</td><td>马太效应 （2 -- 8 定理即 20 % 的数据提供 80 % 的服务）</td><td>长尾效应</td></tr><tr><td>目标</td><td>快速满足</td><td>持续服务</td></tr><tr><td>评估指标</td><td>简明</td><td>复杂</td></tr></tbody></table><h3 id="_1-4-推荐系统的作用" tabindex="-1">1.4 推荐系统的作用 <a class="header-anchor" href="#_1-4-推荐系统的作用" aria-label="Permalink to &quot;1.4 推荐系统的作用&quot;">​</a></h3><ol><li>高效连接用户和物品，发现长尾商品</li><li>留住用户和内容生产者，实现商业目标</li></ol><h3 id="_1-5-推荐系统的工作原理和应用场景" tabindex="-1">1.5 推荐系统的工作原理和应用场景 <a class="header-anchor" href="#_1-5-推荐系统的工作原理和应用场景" aria-label="Permalink to &quot;1.5 推荐系统的工作原理和应用场景&quot;">​</a></h3><ol><li><strong>社会化推荐：</strong> 向朋友咨询，社会化推荐，让好友给自己推荐物品</li><li><strong>基于内容的推荐：</strong> 打开搜索引擎，输入自己喜欢的演员的名字，然后查看返回结果中还有什么电影是自己没看过的</li><li><strong>基于流行度的推荐：</strong> 票房排行榜</li><li><strong>基于系统过滤的推荐：</strong> 找到和自己历史兴趣相似的用户，看看他们最近在看什么电影</li></ol><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p></p><p>推荐系统的应用场景有：feed 流 （信息推送服务）</p></div><h2 id="二、推荐算法架构" tabindex="-1">二、推荐算法架构 <a class="header-anchor" href="#二、推荐算法架构" aria-label="Permalink to &quot;二、推荐算法架构&quot;">​</a></h2><h3 id="_2-1-推荐算法流程" tabindex="-1">2.1 推荐算法流程 <a class="header-anchor" href="#_2-1-推荐算法流程" aria-label="Permalink to &quot;2.1 推荐算法流程&quot;">​</a></h3><ol><li>召回阶段 （海选） <ul><li>召回决定了最终推荐结果的天花板</li><li>常用算法： <ul><li>协同过滤 （基于用户、基于物品）</li><li>基于内容 （根据用户行为总结出自己的偏好，根据偏好，通过文本挖掘技术找到内容上相似的商品）</li><li>基于隐语义</li></ul></li></ul></li><li>排序阶段 <ul><li>召回决定了最终推荐结果的天花板，排序逼近这个极限，决定最终的推荐效果</li><li>RTR 预估 （点击率预估，使用 LR 算法）估计用户是否会点击某个商品，需要用户的点击数据</li></ul></li><li>策略调整 （定制化策略）</li></ol><p><img src="https://2024-cbq-1311841992.cos.ap-beijing.myqcloud.com/picgo/202405181357038.png" alt="image-20240518135713978"></p><h3 id="_2-2-推荐算法整体架构" tabindex="-1">2.2 推荐算法整体架构 <a class="header-anchor" href="#_2-2-推荐算法整体架构" aria-label="Permalink to &quot;2.2 推荐算法整体架构&quot;">​</a></h3><blockquote><ul><li><a href="https://www.zhihu.com/tardis/zm/art/445000776?source_id=1005" target="_blank" rel="noreferrer">https://www.zhihu.com/tardis/zm/art/445000776?source_id=1005</a></li></ul></blockquote><p><img src="https://2024-cbq-1311841992.cos.ap-beijing.myqcloud.com/picgo/202405181443787.png" alt="image-20240518144340684"></p><p><img src="https://2024-cbq-1311841992.cos.ap-beijing.myqcloud.com/picgo/202405181358636.png" alt="image-20240518135828537"></p><p><img src="https://2024-cbq-1311841992.cos.ap-beijing.myqcloud.com/picgo/202405181358464.png" alt="image-20240518135847373"></p><h3 id="_2-3-架构说明" tabindex="-1">2.3 架构说明 <a class="header-anchor" href="#_2-3-架构说明" aria-label="Permalink to &quot;2.3 架构说明&quot;">​</a></h3><h4 id="业务架构说明" tabindex="-1">业务架构说明 <a class="header-anchor" href="#业务架构说明" aria-label="Permalink to &quot;业务架构说明&quot;">​</a></h4><ol><li>系统定期将 业务数据库 和 日志系统 中的数据加载到 分布式文件系统 （HDFS）中然后进行召回阶段 （离线数据处理）</li><li>召回阶段，根据不同的类型选取不同的模型进行召回，并将召回的内容 （画像召回、热门召回、协同过滤召回、其它召回）合并 <ul><li>基于协同过滤的召回，包括 ALS 模型、评分矩阵、偏好评分等</li><li>基于内容的召回，包括 兴趣特征、属性特征、画像特征</li><li>基于点击率的召回，即排序模型 包括 LR 模型、GBDT 模型</li></ul></li><li>上述召回阶段期间，如果有实时的数据需要计算，包括 用户 | 物品画像、相似度矩阵的计算，计算的结果影响</li></ol><h4 id="技术架构说明" tabindex="-1">技术架构说明 <a class="header-anchor" href="#技术架构说明" aria-label="Permalink to &quot;技术架构说明&quot;">​</a></h4><h2 id="三、推荐模型构建流程" tabindex="-1">三、推荐模型构建流程 <a class="header-anchor" href="#三、推荐模型构建流程" aria-label="Permalink to &quot;三、推荐模型构建流程&quot;">​</a></h2><p>推荐系统是一种信息过滤系统，它的目的是预测用户对物品的“评价”或“偏好”。推荐系统的整体架构通常包括以下几个关键组件：</p><ol><li><strong>数据收集</strong>：推荐系统需要收集用户数据和物品数据。用户数据可能包括用户的行为（如点击、购买、评分等）、用户的人口统计信息（如年龄、性别、职业等）等。物品数据可能包括物品的描述信息（如标题、类别、价格等）</li><li><strong>数据预处理</strong>：收集到的数据往往需要进行清洗和预处理，以便于后续的分析和建模。这可能包括去除噪声、填补缺失值、数据规范化等</li><li>数据评估：评估数据是否符合系统要求</li><li><strong>特征工程</strong>：特征工程是将原始数据转换为能够被推荐算法有效利用的特征。这可能包括用户特征（如用户历史行为、用户画像等）和物品特征（如物品属性、物品内容等）</li><li><strong>推荐算法</strong>：推荐算法是推荐系统的核心，它根据用户和物品的特征来预测用户的偏好。常见的推荐算法包括协同过滤（基于用户或基于物品）、内容推荐、基于知识的推荐、混合推荐等</li><li><strong>模型训练</strong>：推荐算法通常需要通过机器学习模型来实现。模型训练就是使用历史数据来训练这些模型，以便它们能够学习到用户和物品之间的关系</li><li><strong>推荐生成</strong>：训练好的模型会被用来生成推荐列表。这个过程通常包括将用户特征和物品特征输入到模型中，然后得到一个排序的物品列表</li><li><strong>评估与优化</strong>：推荐系统需要不断地评估其推荐效果，并根据评估结果进行优化。评估指标可能包括准确率、召回率、覆盖率、多样性、新颖性等</li><li><strong>用户界面</strong>：推荐结果需要通过用户界面展示给用户。用户界面设计应该直观易用，能够有效地展示推荐结果，并允许用户进行交互（如点击、购买、评分等）</li><li><strong>实时反馈</strong>：推荐系统通常需要实时处理用户的反馈，如用户的点击、购买等行为，以便及时调整推荐策略</li><li><strong>冷启动处理</strong>：对于新用户或新物品，推荐系统需要有相应的策略来处理冷启动问题，如使用热门推荐、随机推荐等</li></ol><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p></p><p>推荐模型的一般构建流程为：</p><p>Data （数据） ---&gt; Features （特征） ---&gt; ML AIgorithm （机器学习算法） ---&gt; Prediction Output （预测输出）</p></div><p><img src="https://2024-cbq-1311841992.cos.ap-beijing.myqcloud.com/picgo/202405181440609.png" alt="image-20240518144030525"></p><h3 id="_3-1-数据获取及处理" tabindex="-1">3.1 数据获取及处理 <a class="header-anchor" href="#_3-1-数据获取及处理" aria-label="Permalink to &quot;3.1 数据获取及处理&quot;">​</a></h3><h4 id="_3-1-1-数据的来源" tabindex="-1">3.1.1 数据的来源 <a class="header-anchor" href="#_3-1-1-数据的来源" aria-label="Permalink to &quot;3.1.1 数据的来源&quot;">​</a></h4><ol><li>显性数据 <ul><li>rating 打分 （爬取 ）</li><li>comments 评价 | 评论 （爬取 ）</li></ul></li><li>隐性数据 <ul><li>order History 历史订单 （爬取 ）</li><li>cart ecents 购物车数据 （爬取 ）</li><li>page views 页面浏览 （爬取 ）</li><li>click thru 点击</li><li>search log 搜索记录</li></ul></li></ol><table><thead><tr><th>显性数据</th><th>隐性数据</th><th>获取方式</th></tr></thead><tbody><tr><td>rating 打分</td><td></td><td>🕸️ 爬取</td></tr><tr><td>comments 评价 | 评论</td><td></td><td>🕸️ 爬取</td></tr><tr><td></td><td>order History 历史订单</td><td>🕸️ 爬取、公开数据集 🥸</td></tr><tr><td></td><td>cart ecents 购物车数据</td><td>🕸️ 爬取、公开数据集 🥸</td></tr><tr><td></td><td>page views 页面浏览</td><td>🔨 主动记录收集、公开数据集 🥸</td></tr><tr><td></td><td>click thru 点击</td><td>🔨 主动记录收集、公开数据集 🥸</td></tr><tr><td></td><td>search log 搜索记录</td><td>🔨 主动记录收集、公开数据集 🥸</td></tr></tbody></table><h3 id="_3-2-评判数据是否达标" tabindex="-1">3.2 评判数据是否达标 <a class="header-anchor" href="#_3-2-评判数据是否达标" aria-label="Permalink to &quot;3.2 评判数据是否达标&quot;">​</a></h3><p>通过相关指标，查看数据是否达标</p><h3 id="_3-3-特征工程" tabindex="-1">3.3 特征工程 <a class="header-anchor" href="#_3-3-特征工程" aria-label="Permalink to &quot;3.3 特征工程&quot;">​</a></h3><ul><li>协同过滤：user-item 评分矩阵</li><li>基于内容：分词 tf-idf、word2Vec</li></ul><h4 id="_3-1-1-从数据中筛选特征" tabindex="-1">3.1.1 从数据中筛选特征 <a class="header-anchor" href="#_3-1-1-从数据中筛选特征" aria-label="Permalink to &quot;3.1.1 从数据中筛选特征&quot;">​</a></h4><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p></p><p>从数据中筛选特征主要是指：</p><ol><li>一个给定的商品，可能被用有类似品味或需求的用户购买</li><li>使用用户行为描述商品</li></ol></div><p><img src="https://2024-cbq-1311841992.cos.ap-beijing.myqcloud.com/picgo/202405181413271.png" alt="image-20240518141300208"></p><h4 id="_3-3-2-用数据表示特征" tabindex="-1">3.3.2 用数据表示特征 <a class="header-anchor" href="#_3-3-2-用数据表示特征" aria-label="Permalink to &quot;3.3.2 用数据表示特征&quot;">​</a></h4><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p></p><p>用数据表示特征主要是指：</p><ol><li>将所有用户行为合并在一起，行程一个 user-item 矩阵</li></ol></div><p><img src="https://2024-cbq-1311841992.cos.ap-beijing.myqcloud.com/picgo/202405181413200.png" alt="image-20240518141349120"></p><h3 id="_3-4-选择算法" tabindex="-1">3.4 选择算法 <a class="header-anchor" href="#_3-4-选择算法" aria-label="Permalink to &quot;3.4 选择算法&quot;">​</a></h3><ul><li>协同过滤 <ul><li>kNN</li><li>矩阵分解</li></ul></li></ul><h3 id="_3-5-训练模型" tabindex="-1">3.5 训练模型 <a class="header-anchor" href="#_3-5-训练模型" aria-label="Permalink to &quot;3.5 训练模型&quot;">​</a></h3><p>3.7 推荐生成</p><h3 id="_3-6-评估、优化" tabindex="-1">3.6 评估、优化 <a class="header-anchor" href="#_3-6-评估、优化" aria-label="Permalink to &quot;3.6 评估、优化&quot;">​</a></h3><h3 id="_3-7-用户界面" tabindex="-1">3.7 用户界面 <a class="header-anchor" href="#_3-7-用户界面" aria-label="Permalink to &quot;3.7 用户界面&quot;">​</a></h3><h3 id="_3-8-实时反馈" tabindex="-1">3.8 实时反馈 <a class="header-anchor" href="#_3-8-实时反馈" aria-label="Permalink to &quot;3.8 实时反馈&quot;">​</a></h3><h3 id="_3-9-冷启动处理" tabindex="-1">3.9 冷启动处理 <a class="header-anchor" href="#_3-9-冷启动处理" aria-label="Permalink to &quot;3.9 冷启动处理&quot;">​</a></h3><h3 id="_3-10-模型部署" tabindex="-1">3.10 模型部署 <a class="header-anchor" href="#_3-10-模型部署" aria-label="Permalink to &quot;3.10 模型部署&quot;">​</a></h3>',53),r=[e];function d(s,h,c,n,u,p){return l(),a("div",null,r)}const g=t(o,[["render",d]]);export{m as __pageData,g as default};
